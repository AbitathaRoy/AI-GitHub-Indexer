[
  {
    "repo_name": "15_Puzzle",
    "repo_url": "https://github.com/AbitathaRoy/15_Puzzle",
    "repo_description": "",
    "repo_readme": "## 15 Puzzle by Abitatha Roy\nThis project aims to implement and solve the 15 puzzle problem. Initially, I will make a CLI version of the program, and it will be followed by a GUI version.\n"
  },
  {
    "repo_name": "AI-GitHub-Indexer",
    "repo_url": "https://github.com/AbitathaRoy/AI-GitHub-Indexer",
    "repo_description": "This is a personal ambition wherein I strike to have an index to track my GitHub account and provide results on what's in it, depending on the question asked.",
    "repo_readme": "# AI-GitHub-Indexer\nThis is a personal ambition wherein I strike to have an index to track my GitHub account and provide results on what's in it, depending on the question asked.\n"
  },
  {
    "repo_name": "AI-Job-Matching",
    "repo_url": "https://github.com/AbitathaRoy/AI-Job-Matching",
    "repo_description": "",
    "repo_readme": "# AI-Job-Matching"
  },
  {
    "repo_name": "CIC_DU_abitatha_intro",
    "repo_url": "https://github.com/AbitathaRoy/CIC_DU_abitatha_intro",
    "repo_description": "LA LA LA TESTING",
    "repo_readme": "# CIC_DU_abitatha_intro\nWith Or Without You\n"
  },
  {
    "repo_name": "CLI-Alarm-Clock-by-Abitatha",
    "repo_url": "https://github.com/AbitathaRoy/CLI-Alarm-Clock-by-Abitatha",
    "repo_description": "Command Line Interface powered Alarm Clock, built by me in Java. I am a student.",
    "repo_readme": "# CLI-Alarm-Clock-by-Abitatha\nCommand Line Interface powered Alarm Clock, built by me in Java. I am a student.\n\n# How to run the program?\nThe program is in Java.\nRun the class \"alarm2\" using terminal.\n"
  },
  {
    "repo_name": "Crop-Water-Simulator",
    "repo_url": "https://github.com/AbitathaRoy/Crop-Water-Simulator",
    "repo_description": "Combined a theoretical framework with field data to simulate the movement of water in a single-crop system.",
    "repo_readme": "# Crop-Water-Simulator\nCombined a theoretical framework with field data to simulate the movement of water in a single-crop system.\n\n# Long Description\n\nThe complete project report can be viewed here: [Project Report (Dec 2024) (PDF)](docs/ODE%20Project%20-%2006-12-2024%200023%20hours.pdf)\n\n## Two-Compartment Model for Water Transport in Banana Crops\n\nAs part of my coursework on modeling continuous changes through **Ordinary Differential Equations (ODEs)**, I worked on a team project to develop a **two-compartment model** simulating water transport between soil and plants, with a focus on **banana crops**.\n\nThe project assessed fundamental processes such as **water absorption, transpiration, and evaporation** in the context of water management under various conditions. Using theoretically derived frameworks and real-world field data, we developed and tested differential equations to represent water dynamics, incorporating key factors like **soil permeability, evaporation rates, and root zone depth**.\n\n### ðŸ”¹ Key Contributions  \n\n#### ðŸ“Œ Model Design and Validation  \n- Developed and validated a **mathematical model** capable of simulating **water flux** between soil and plant compartments over long periods.  \n\n#### ðŸ“Œ Simulations and Scenario Analysis  \n- Performed simulations under diverse scenarios, including **drought and saturated soil conditions**, to evaluate model adaptability and accuracy.  \n- Utilized **parametric runs** with meteorological and agricultural data to ensure practical applicability for **crop irrigation** and **efficient water use**.  \n\n#### ðŸ“Œ Proposals for Scaling  \n- Proposed future enhancements to upscale the model for real-life **agricultural systems**, emphasizing **irrigation optimization** and **resource sustainability**.  \n\nThis project not only strengthened my skills in **ODE-based modeling and simulation** but also provided valuable insights into the intersection of **mathematics, agriculture, and sustainability**.\n"
  },
  {
    "repo_name": "Developing-AI-Applications-with-Python-and-Flask",
    "repo_url": "https://github.com/AbitathaRoy/Developing-AI-Applications-with-Python-and-Flask",
    "repo_description": "Repo maintained as a part of IBM's course by the same name.",
    "repo_readme": ""
  },
  {
    "repo_name": "git-workshop-harsh",
    "repo_url": "https://github.com/AbitathaRoy/git-workshop-harsh",
    "repo_description": "hehe",
    "repo_readme": "This is a sample repo"
  },
  {
    "repo_name": "IBMDataScience",
    "repo_url": "https://github.com/AbitathaRoy/IBMDataScience",
    "repo_description": "Data Science with IBM. ",
    "repo_readme": "# IBMDataScience\nData Science with IBM. \n"
  },
  {
    "repo_name": "In-Silico-Biology",
    "repo_url": "https://github.com/AbitathaRoy/In-Silico-Biology",
    "repo_description": "Study material for In Silico Biology planned and curated with enthusiasm by Abitatha Roy. Partly written, partly generated, but at the end of the day, the collab made me stronger.",
    "repo_readme": "# In-Silico-Biology\nStudy material for In Silico Biology planned and curated with enthusiasm by Abitatha Roy.\n\n**Note:** The material here has been designed to help my personal learning journey in this stream. Neither I do not claim to be a great scholar in this domain, nor do I claim the material to be 100% AI free. If my material helps you in any way, feel free to refer to it for your studies.\n"
  },
  {
    "repo_name": "JavaLearning_DUCIC",
    "repo_url": "https://github.com/AbitathaRoy/JavaLearning_DUCIC",
    "repo_description": "This repository contains material created during the learning process of Java at Cluster Innovation Centre, University of Delhi, as a part of the 2nd Semester course titled Object Oriented Programming.",
    "repo_readme": "# JavaLearning_DUCIC\nThis repository contains material created during the learning process of Java at Cluster Innovation Centre, University of Delhi, as a part of the 2nd Semester course titled Object Oriented Programming.\n"
  },
  {
    "repo_name": "joomla-cms",
    "repo_url": "https://github.com/AbitathaRoy/joomla-cms",
    "repo_description": "Home of the Joomla! Content Management System",
    "repo_readme": "Joomla! CMSâ„¢\n====================\n\nThe Joomla! 5.0 branch is under heavy development and not all links in this document are available yet\n------------------------------------------------------------------------------------------------------\n\nBuild Status\n---------------------\n| Drone-CI                                                                                                                                 | AppVeyor                                                                                                                                                           | PHP                                                                           | Node                                                                                 | npm                                                                             |\n|------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|---------------------------------------------------------------------------------|\n| [![Build Status](https://ci.joomla.org/api/badges/joomla/joomla-cms/status.svg?branch=5.0-dev)](https://ci.joomla.org/joomla/joomla-cms) | [![Build status](https://ci.appveyor.com/api/projects/status/ru6sxal8jmfckvjc/branch/5.0-dev?svg=true)](https://ci.appveyor.com/project/release-joomla/joomla-cms) | [![PHP](https://img.shields.io/badge/PHP-V8.1.0-green)](https://www.php.net/) | [![node-lts](https://img.shields.io/badge/Node-V18.0-green)](https://nodejs.org/en/) | [![npm](https://img.shields.io/badge/npm-v9.6.7-green)](https://nodejs.org/en/) |\n\nOverview\n---------------------\n* This is the source of Joomla! 5.x.\n* Joomla's [Official website](https://www.joomla.org).\n* Joomla! 5.0 [version history](https://docs.joomla.org/Special:MyLanguage/Joomla_5.0_version_history).\n* Detailed changes are in the [changelog](https://github.com/joomla/joomla-cms/commits/5.0-dev).\n\nWhat is Joomla?\n---------------------\n* [Joomla!](https://www.joomla.org/about-joomla.html) is a **Content Management System** (CMS) which enables you to build websites and powerful online applications.\n* It is a simple and powerful web server application which requires a server with PHP and either MySQL or PostgreSQL to run. You can find [full technical requirements here](https://downloads.joomla.org/technical-requirements).\n* Joomla! is **free and Open Source software** distributed under the GNU General Public License version 2 or later.\n\nLooking for an installable package?\n---------------------\nJoomla is not installable out of the box from this repository, please use:\n- For the latest stable package: https://downloads.joomla.org\n- For a nightly package: https://developer.joomla.org/nightly-builds.html\n\nHow to get a working installation from the source\n---------------------\nFor detailed instructions please visit https://docs.joomla.org/Special:MyLanguage/J5.x:Setting_Up_Your_Local_Environment\n\nYou will need:\n- PHP - basically the same as you need for running a Joomla Site, but you need the cli (command line interface) Version (see https://docs.joomla.org/Special:MyLanguage/Configuring_a_LAMPP_server_for_PHP_development)\n- Composer - for managing Joomla's PHP Dependencies. For help installing composer please read the documentation at https://getcomposer.org/doc/00-intro.md\n- Node.js - for compiling Joomla's Javascript and SASS files. For help installing Node.js please follow the instructions available on https://nodejs.org/en/\n- Git - for version management. Download from here https://git-scm.com/downloads (MacOS users can also use Brew and Linux users can use the built-in package manager, eg apt, yum, etc).\n\n**Steps to setup the local environment:**\n- Clone the repository:\n```bash\ngit clone https://github.com/joomla/joomla-cms.git\n```\n- Go to the joomla-cms folder:\n```bash\ncd joomla-cms\n```\n- Go to the 5.0-dev branch:\n```bash\ngit checkout 5.0-dev\n```\n- Install all the needed composer packages:\n```bash\ncomposer install\n```\n- Install all the needed npm packages:\n```bash\nnpm ci\n```\n\n**Things to be aware of when pulling:**\nJoomla creates a cache of the namespaces of its extensions in `JOOMLA_ROOT/administrator/cache/autoload_psr4.php`. If\nextensions are created, deleted or removed in git then this file needs to be recreated. You can simply delete the file\nand it will be regenerated on the next call to Joomla.\n\nDo you want to improve Joomla?\n--------------------\n* Where to [request a feature](https://issues.joomla.org)?\n* How do you [report a bug](https://docs.joomla.org/Special:MyLanguage/Filing_bugs_and_issues) on the [Issue Tracker](https://issues.joomla.org)?\n* Get Involved: Joomla! is community developed software. [Join the community](https://volunteers.joomla.org).\n* Documentation for [Developers](https://docs.joomla.org/Special:MyLanguage/Portal:Developers).\n* Documentation for [Web designers](https://docs.joomla.org/Special:MyLanguage/Web_designers).\n* Provide a translation for Joomla: [Joomla Crowdin Project](https://joomla.crowdin.com/cms)\n\nCopyright\n---------------------\n* (C) 2005 Open Source Matters, Inc. <https://www.joomla.org>\n* Distributed under the GNU General Public License version 2 or later\n* See [License details](https://docs.joomla.org/Special:MyLanguage/Joomla_Licenses)\n"
  },
  {
    "repo_name": "Molecular-Docking",
    "repo_url": "https://github.com/AbitathaRoy/Molecular-Docking",
    "repo_description": "Perform molecular docking using terminal itself and visualise the results. No manual effort required, just set the input receptor and ligand, then sit back and relax as the program does its job.",
    "repo_readme": "# Molecular-Docking\n\n**Note:** Bridge under construction\n\nPerform molecular docking using terminal itself and visualise the results. No manual effort required, just set the input receptor and ligand, then sit back and relax as the program does its job.\n"
  },
  {
    "repo_name": "newrepo",
    "repo_url": "https://github.com/AbitathaRoy/newrepo",
    "repo_description": "",
    "repo_readme": "Let's go!!"
  },
  {
    "repo_name": "Relative-Grading",
    "repo_url": "https://github.com/AbitathaRoy/Relative-Grading",
    "repo_description": "Simulation-based observational study to understand and visualise the relative grading system used at the University of Delhi.",
    "repo_readme": "# Relative-Grading\nSimulation-based observational study to understand and visualise the relative grading system used at the University of Delhi.\n"
  },
  {
    "repo_name": "Resume",
    "repo_url": "https://github.com/AbitathaRoy/Resume",
    "repo_description": "My current working resumes.",
    "repo_readme": "# Resume\nMy current working resumes.\n\n**Note:** Clickable links will work only after opening a resume PDF through a PDF viewer (in-built in the browser or locally)\n"
  },
  {
    "repo_name": "Semester-Exam-Papers",
    "repo_url": "https://github.com/AbitathaRoy/Semester-Exam-Papers",
    "repo_description": "This repository primarily contains the question papers which I have taken as my semester exams during my university. In special cases, it may also include some papers in which I have not appeared.",
    "repo_readme": "# Semester-Exam-Papers\nThis repository primarily contains the question papers which I have taken as my semester exams during my university. In special cases, it may also include some papers in which I have not appeared.\n"
  },
  {
    "repo_name": "Semester_Exam_papers",
    "repo_url": "https://github.com/AbitathaRoy/Semester_Exam_papers",
    "repo_description": "you can access previous year exam papers here...",
    "repo_readme": "# Semester_Exam_papers\nyou can access previous year exam papers here...\n"
  },
  {
    "repo_name": "SeqAlign-Mutation-Finder",
    "repo_url": "https://github.com/AbitathaRoy/SeqAlign-Mutation-Finder",
    "repo_description": "This tool helps you find out the mutations and indels in a target genome sequence with respect to a reference genome sequence, and stores it in a file for you to analyze and use later for additional purposes.",
    "repo_readme": "# SeqAlign-Mutation-Finder\n\nThis tool helps you find out the mutations and indels in a target genome sequence with respect to a reference genome sequence and stores the results in a file for further analysis. It is useful for detecting genetic variations, particularly in cases like viral genome mutation tracking or drug resistance studies.\n\n## Features\n\n- **Pairwise sequence alignment** using Biopythonâ€™s alignment tools.  \n- **Mutation detection** (substitutions) with positional tracking.  \n- **Indel detection** (insertions/deletions) with separate categorization.  \n- **Structured output storage** in a text file for further study.  \n- ~~**Customizable analysis** to interpret mutations based on external datasets.~~\n\n## Installation\n\nEnsure you have Python installed. You can run it in either of the two ways.\n1) Download this notebook on your local system and run it using your local software, such as Visual Studio Code or Anaconda.\n2) Import this notebook in a cloud environment such as Google Colab and run it directly.\n\n## Usage\n\n### Installing BioPython and importing packages\n\nRun the first two sections of the notebook to achieve this purpose.\n\n### Load Sequences\n\nThe **Load Sequences** section handles the input through the following lines.\n\n```python\nreference_seq = read_fasta(\"reference.fna\")  # replace with your reference file\ntarget_seq = read_fasta(\"target.fna\")  # Replace with your target file\n```\n\nReplace the filenames with the path of the files you want to use and run. You must have the sequences saved in **FASTA format.**\n\n### Visualize the Output\n\nBy running the subsequent sections, you get two sets of outputs.\n1) You can visualize the sequence alignment under the **Sequence Alignment** section.\n2) You get a proper list of the mutations and indels upon running the **Mutations and Insertions/Deletions** section. This output is also stored in a file in your notebook directory.\n(Note: You must run (1) to make (2) work!)\n\n## Example Output\n\n### Sequence Alignment\n\n```\ntarget            0 GGTCTCTCTGGTTAGACCAGATCTGAGCCTGGGAGCTCTCTGGCTAACTAGGGAACCCAC\n                  0 -----------||-------------|--||.||---||||||-|||||||.||.|||.|\nquery             0 -----------TT-------------G--TGTGA---CTCTGG-TAACTAGAGATCCCTC\n\ntarget           60 TGCTTAAGCCTCAATAAAGCTTGCCTTGAGTGCTTCAAGTAGTGTGTGCCCGTCTGTTGT\n                 60 .|---|...|||.|.|.||--||--|..|...|-||.||.||||-|.|||||--------\nquery            30 AG---ACCACTCTAGATAG--TG--TAAAAATC-TCTAGCAGTG-GCGCCCG--------\n\ntarget          120 GTGACTCTGGTAACTAGAGATCCCTCAGACCCTTTTAGTCAGTGTGGAAAATCTCTAGCA\n                120 -----------|||-||-|--------|||----||----------||||---.|.|-.|\nquery            73 -----------AAC-AG-G--------GAC----TT----------GAAA---GCGA-AA\n\ntarget          180 GTGGCGCCCGAACAGGGACCTGAAAGCGAAAGGGAAACCAGAGGAGCTCTCTCGACGCAG\n                180 ||-------.|||||||||..|||||||||||---..||||||.||.|||||||||||||\nquery            94 GT-------TAACAGGGACTCGAAAGCGAAAG---TTCCAGAGAAGTTCTCTCGACGCAG\n```\n\n### Mutations\n\n```\nPosition 5880 to 5880: G â†’ A\nPosition 5882 to 5883: AA â†’ TG\nPosition 5885 to 5885: A â†’ C\nPosition 5888 to 5888: G â†’ A\nPosition 5924 to 5924: G â†’ A\nPosition 5945 to 5945: T â†’ C\n```\n\n### Indels\n\n```\nPosition 7033 to 7041: TGAAGGAAG â†’ ---------\nPosition 7193 to 7195: --- â†’ AAT\nPosition 7202 to 7207: ------ â†’ ACTAAC\nPosition 7977 to 7978: -- â†’ TT\nPosition 7987 to 7988: AC â†’ --\nPosition 8184 to 8204: --------------------- â†’ CAGTCTCAAGGGACTGAGACT\nPosition 8400 to 8400: - â†’ A\n```\n\n## Applications\n\n- Viral genome analysis (e.g., tracking mutations in HIV, SARS-CoV-2).\n- Drug resistance studies by comparing known mutation databases.\n- Evolutionary biology for detecting sequence variations over time.\n\n## License\n\nThis project is licensed under GPL v3, meaning modifications must remain open-source and credit must be given to the original author.\n\n\n#### For any contributions, bug reports, or feature requests, feel free to open an issue or fork the repository!\n"
  },
  {
    "repo_name": "todo-app",
    "repo_url": "https://github.com/AbitathaRoy/todo-app",
    "repo_description": "",
    "repo_readme": ""
  },
  {
    "repo_name": "Urban-AQI-Trends",
    "repo_url": "https://github.com/AbitathaRoy/Urban-AQI-Trends",
    "repo_description": "A data-driven analysis of air quality trends across major Indian citiesâ€”examining pollutant patterns, meteorological influences, and vehicular contributions over the past decade, with a special focus on Delhi's winter smog.",
    "repo_readme": "# Urban-AQI-Trends\nA data-driven analysis of air quality trends across major Indian citiesâ€”examining pollutant patterns, meteorological influences, and vehicular contributions over the past decade, with a special focus on Delhi's winter smog.\n"
  },
  {
    "repo_name": "Vishal-Mega-Mart-Entrance-Test",
    "repo_url": "https://github.com/AbitathaRoy/Vishal-Mega-Mart-Entrance-Test",
    "repo_description": "A simulation of the fictional Vishal Mega Mart Entrance Test which is the basis of selection to Vishal Mega Mart for the position of a security guard.",
    "repo_readme": "# Vishal-Mega-Mart-Entrance-Test\nA simulation of the fictional Vishal Mega Mart Entrance Test which is the basis of selection to Vishal Mega Mart for the position of a security guard.\n"
  },
  {
    "repo_name": "visualize",
    "repo_url": "https://github.com/AbitathaRoy/visualize",
    "repo_description": "",
    "repo_readme": "# Visualizing AgentTorch Simulations\n\nThis module provides a Python API that works seamlessly with AgentTorch\nto visualize a simulation using the trajectory of its state.\n\nThe various supported types of visualizations are described below. To\nrequest/add a new visualization, please open a pull request or an issue.\n\n## GeoPlot\n\nThis visualization renders a 3-D plot of the data given the state\ntrajectory of a simulation, and the path of the property to render.\n\nIt generates an HTML file that contains code to render the plot using\nCesium Ion, and the GeoJSON file of data provided to the plot.\n\nAn example of its usage is as follows:\n\n```py\nfrom agent_torch.visualize import GeoPlot\n\n# create a simulation\n# ...\n\n# create a visualizer\ngeoplot = GeoPlot(config, cesium_token)\n\n# visualize in the runner-loop\nfor i in range(0, num_episodes):\n  runner.step(num_steps_per_episode)\n\n  geoplot.visualize(\n    name = f\"consumer-money-spent-{i}\",\n    state_trajectory = runner.state_trajectory,\n    entity_position = \"consumers/coordinates\",\n    entity_property = \"consumers/money_spent\",\n  )\n```\n"
  }
]